security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: apiToken
                # if you're using multiple entity managers
                # manager_name: customer
        #users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        #main2:
            #anonymous: true
        #    lazy: true
        #    logout: ~
        #    guard:
        #        authenticators:
        #            - App\Security\TokenAuthenticator
        
        main:
            lazy: true
            provider: user_provider 
            #form_login:
            #    check_path: user_check
            #    login_path: user_data
            json_login:
                #remember_me: true
                check_path: user_check
            logout:
                path:   user_logout
                target: user_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used

    access_control:        
        - { path: ^/user/, roles: [ROLE_USER] }
        - { path: ^/secured/, roles: [ROLE_ADMIN, ROLE_SYSADMIN] }
